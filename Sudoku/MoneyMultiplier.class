/*
 * Decompiled with CFR 0.152.
 */
import java.awt.Component;
import java.awt.EventQueue;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Box;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSplitPane;
import javax.swing.JTextArea;
import javax.swing.JTextField;

public class MoneyMultiplier {
    private JFrame frame;
    private JTextField txtInitialChangeIn;
    private JTextField txtReserveRatio;
    private JTextField txtNumberOfTransactions;
    private JTextArea textArea;
    private double initial = 0.0;
    private double total = 0.0;
    private double reserve = 0.0;
    private int transaction = 0;
    private boolean who = false;

    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable(){

            @Override
            public void run() {
                try {
                    MoneyMultiplier window = new MoneyMultiplier();
                    window.frame.setVisible(true);
                }
                catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    public MoneyMultiplier() {
        this.initialize();
    }

    private void initialize() {
        this.frame = new JFrame();
        this.frame.setResizable(false);
        this.frame.setBounds(100, 100, 550, 350);
        this.frame.setDefaultCloseOperation(3);
        GridBagLayout gridBagLayout = new GridBagLayout();
        gridBagLayout.columnWidths = new int[2];
        gridBagLayout.rowHeights = new int[2];
        gridBagLayout.columnWeights = new double[]{1.0, Double.MIN_VALUE};
        gridBagLayout.rowWeights = new double[]{1.0, Double.MIN_VALUE};
        this.frame.getContentPane().setLayout(gridBagLayout);
        JSplitPane splitPane = new JSplitPane();
        GridBagConstraints gbc_splitPane = new GridBagConstraints();
        gbc_splitPane.fill = 1;
        gbc_splitPane.gridx = 0;
        gbc_splitPane.gridy = 0;
        this.frame.getContentPane().add((Component)splitPane, gbc_splitPane);
        JPanel panel = new JPanel();
        splitPane.setLeftComponent(panel);
        GridBagLayout gbl_panel = new GridBagLayout();
        int[] nArray = new int[5];
        nArray[1] = 138;
        nArray[3] = -21;
        gbl_panel.columnWidths = nArray;
        int[] nArray2 = new int[11];
        nArray2[2] = 14;
        gbl_panel.rowHeights = nArray2;
        gbl_panel.columnWeights = new double[]{0.0, 0.0, 0.0, 1.0, Double.MIN_VALUE};
        gbl_panel.rowWeights = new double[]{0.0, 0.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 0.0, Double.MIN_VALUE};
        panel.setLayout(gbl_panel);
        final JButton btnWho = new JButton("Federal Reserve");
        btnWho.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent arg0) {
                MoneyMultiplier.this.who = !MoneyMultiplier.this.who;
                if (MoneyMultiplier.this.who) {
                    btnWho.setText("People");
                } else {
                    btnWho.setText("Federal Reserve");
                }
            }
        });
        Component horizontalStrut = Box.createHorizontalStrut(20);
        GridBagConstraints gbc_horizontalStrut = new GridBagConstraints();
        gbc_horizontalStrut.gridheight = 10;
        gbc_horizontalStrut.insets = new Insets(0, 0, 0, 5);
        gbc_horizontalStrut.gridx = 0;
        gbc_horizontalStrut.gridy = 0;
        panel.add(horizontalStrut, gbc_horizontalStrut);
        Component verticalStrut = Box.createVerticalStrut(20);
        GridBagConstraints gbc_verticalStrut = new GridBagConstraints();
        gbc_verticalStrut.insets = new Insets(0, 0, 5, 5);
        gbc_verticalStrut.gridx = 1;
        gbc_verticalStrut.gridy = 0;
        panel.add(verticalStrut, gbc_verticalStrut);
        Component horizontalStrut_1 = Box.createHorizontalStrut(20);
        GridBagConstraints gbc_horizontalStrut_1 = new GridBagConstraints();
        gbc_horizontalStrut_1.gridheight = 10;
        gbc_horizontalStrut_1.insets = new Insets(0, 0, 0, 5);
        gbc_horizontalStrut_1.gridx = 2;
        gbc_horizontalStrut_1.gridy = 0;
        panel.add(horizontalStrut_1, gbc_horizontalStrut_1);
        GridBagConstraints gbc_btnWho = new GridBagConstraints();
        gbc_btnWho.fill = 2;
        gbc_btnWho.insets = new Insets(0, 0, 5, 5);
        gbc_btnWho.gridx = 1;
        gbc_btnWho.gridy = 1;
        panel.add((Component)btnWho, gbc_btnWho);
        JLabel lblInitialChangeIn = new JLabel("Initial Change in $");
        GridBagConstraints gbc_lblInitialChangeIn = new GridBagConstraints();
        gbc_lblInitialChangeIn.fill = 1;
        gbc_lblInitialChangeIn.insets = new Insets(0, 0, 5, 5);
        gbc_lblInitialChangeIn.gridx = 1;
        gbc_lblInitialChangeIn.gridy = 2;
        panel.add((Component)lblInitialChangeIn, gbc_lblInitialChangeIn);
        this.txtInitialChangeIn = new JTextField();
        this.txtInitialChangeIn.setText("");
        GridBagConstraints gbc_txtInitialChangeIn = new GridBagConstraints();
        gbc_txtInitialChangeIn.insets = new Insets(0, 0, 5, 5);
        gbc_txtInitialChangeIn.fill = 2;
        gbc_txtInitialChangeIn.gridx = 1;
        gbc_txtInitialChangeIn.gridy = 3;
        panel.add((Component)this.txtInitialChangeIn, gbc_txtInitialChangeIn);
        this.txtInitialChangeIn.setColumns(10);
        JLabel lblReserveRatio = new JLabel("Reserve Ratio");
        GridBagConstraints gbc_lblReserveRatio = new GridBagConstraints();
        gbc_lblReserveRatio.insets = new Insets(0, 0, 5, 5);
        gbc_lblReserveRatio.fill = 1;
        gbc_lblReserveRatio.gridx = 1;
        gbc_lblReserveRatio.gridy = 4;
        panel.add((Component)lblReserveRatio, gbc_lblReserveRatio);
        this.txtReserveRatio = new JTextField();
        this.txtReserveRatio.setText("");
        GridBagConstraints gbc_txtReserveRatio = new GridBagConstraints();
        gbc_txtReserveRatio.insets = new Insets(0, 0, 5, 5);
        gbc_txtReserveRatio.fill = 2;
        gbc_txtReserveRatio.gridx = 1;
        gbc_txtReserveRatio.gridy = 5;
        panel.add((Component)this.txtReserveRatio, gbc_txtReserveRatio);
        this.txtReserveRatio.setColumns(10);
        JLabel lblNumberOfTransactions = new JLabel("Number of Transactions");
        GridBagConstraints gbc_lblNumberOfTransactions = new GridBagConstraints();
        gbc_lblNumberOfTransactions.insets = new Insets(0, 0, 5, 5);
        gbc_lblNumberOfTransactions.fill = 1;
        gbc_lblNumberOfTransactions.gridx = 1;
        gbc_lblNumberOfTransactions.gridy = 6;
        panel.add((Component)lblNumberOfTransactions, gbc_lblNumberOfTransactions);
        this.txtNumberOfTransactions = new JTextField();
        this.txtNumberOfTransactions.setText("");
        GridBagConstraints gbc_txtNumberOfTransactions = new GridBagConstraints();
        gbc_txtNumberOfTransactions.insets = new Insets(0, 0, 5, 5);
        gbc_txtNumberOfTransactions.fill = 2;
        gbc_txtNumberOfTransactions.gridx = 1;
        gbc_txtNumberOfTransactions.gridy = 7;
        panel.add((Component)this.txtNumberOfTransactions, gbc_txtNumberOfTransactions);
        this.txtNumberOfTransactions.setColumns(10);
        JScrollPane scrollPane = new JScrollPane();
        splitPane.setRightComponent(scrollPane);
        this.textArea = new JTextArea();
        this.textArea.setEditable(false);
        scrollPane.setViewportView(this.textArea);
        JButton btnCalculate = new JButton("Calculate");
        btnCalculate.addActionListener(new ActionListener(){

            @Override
            public void actionPerformed(ActionEvent arg0) {
                MoneyMultiplier.this.total = 0.0;
                try {
                    MoneyMultiplier.this.initial = Double.parseDouble(MoneyMultiplier.this.txtInitialChangeIn.getText());
                    if (!MoneyMultiplier.this.who) {
                        MoneyMultiplier moneyMultiplier = MoneyMultiplier.this;
                        moneyMultiplier.total = moneyMultiplier.total + MoneyMultiplier.this.initial;
                    }
                    MoneyMultiplier.this.reserve = Double.parseDouble(MoneyMultiplier.this.txtReserveRatio.getText());
                    MoneyMultiplier.this.transaction = Integer.parseInt(MoneyMultiplier.this.txtNumberOfTransactions.getText());
                    if (MoneyMultiplier.this.who) {
                        MoneyMultiplier.this.textArea.setText("Initial deposit: $" + (int)MoneyMultiplier.this.initial + "\nReserve ratio: " + MoneyMultiplier.this.reserve + "\nMaximum increase in loans: $" + (int)(MoneyMultiplier.this.initial / MoneyMultiplier.this.reserve - MoneyMultiplier.this.initial) + "\n");
                    } else {
                        MoneyMultiplier.this.textArea.setText("Initial deposit: $" + (int)MoneyMultiplier.this.initial + "\nReserve ratio: " + MoneyMultiplier.this.reserve + "\nMaximum increase in loans: $" + (int)(MoneyMultiplier.this.initial / MoneyMultiplier.this.reserve) + "\n");
                    }
                    int i = 1;
                    while (i <= MoneyMultiplier.this.transaction) {
                        MoneyMultiplier moneyMultiplier = MoneyMultiplier.this;
                        moneyMultiplier.initial = moneyMultiplier.initial * (1.0 - MoneyMultiplier.this.reserve);
                        MoneyMultiplier moneyMultiplier2 = MoneyMultiplier.this;
                        moneyMultiplier2.total = moneyMultiplier2.total + MoneyMultiplier.this.initial;
                        if (MoneyMultiplier.this.initial >= 1.0) {
                            MoneyMultiplier.this.textArea.setText(String.valueOf(MoneyMultiplier.this.textArea.getText()) + "\n" + i + ": Deposit: $" + (int)MoneyMultiplier.this.initial + " Total: $" + (int)MoneyMultiplier.this.total);
                        } else {
                            MoneyMultiplier.this.textArea.setText(String.valueOf(MoneyMultiplier.this.textArea.getText()) + "\n" + i + ": Deposit: < $1" + " Total: $" + (int)MoneyMultiplier.this.total);
                        }
                        ++i;
                    }
                }
                catch (Exception exception) {
                    // empty catch block
                }
            }
        });
        GridBagConstraints gbc_btnCalculate = new GridBagConstraints();
        gbc_btnCalculate.fill = 2;
        gbc_btnCalculate.insets = new Insets(0, 0, 5, 5);
        gbc_btnCalculate.gridx = 1;
        gbc_btnCalculate.gridy = 8;
        panel.add((Component)btnCalculate, gbc_btnCalculate);
        Component verticalStrut_1 = Box.createVerticalStrut(20);
        GridBagConstraints gbc_verticalStrut_1 = new GridBagConstraints();
        gbc_verticalStrut_1.insets = new Insets(0, 0, 0, 5);
        gbc_verticalStrut_1.gridx = 1;
        gbc_verticalStrut_1.gridy = 9;
        panel.add(verticalStrut_1, gbc_verticalStrut_1);
    }
}
